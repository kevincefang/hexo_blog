<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[『夏日朝食』清爽凉拌面]]></title>
      <url>http://blog.1stg.me/2016/06/30/breakfast-june-30-2016-Cold-Noodles/</url>
      <content type="html"><![CDATA[<blockquote>
<p>如果一定问我有一个爱做点心甜品、爱鼓捣早餐的媳妇儿是一种什么样的体验,<br>  我会回答那是满满的幸福的味道.</p>
</blockquote>
<p>今天的早餐是清爽凉拌面!</p>
<a id="more"></a>
<p><img src="//ww3.sinaimg.cn/mw690/910ff108gw1f5cxxnbtttj21jk1jkwq1.jpg" alt="01"></p>
<p>六月的尾巴，天气愈发炎热.</p>
<p>如果不想吃饭也大汗淋漓，不如来一盘清爽的凉面吧.</p>
<p><img src="//ww3.sinaimg.cn/mw690/910ff108gw1f5cxxkkjr7j21jk1jkthu.jpg" alt="02"></p>
<p class="text-center">『用料』</p>

<blockquote>
<ol>
<li>面条（尽量不要用挂面，我用的是原味拉面和紫薯拉面，购于超市）</li>
<li>配菜（苦菊、黄瓜、番茄，可根据口味自行搭配）</li>
<li>调料（橄榄油、花椒油、香油、老干妈、丘比焙煎芝麻口味沙拉汁、大拌菜口味沙拉汁、老干妈香辣脆油辣椒、盐、糖）</li>
</ol>
</blockquote>
<p><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5cxxrkqwtj21jk1jkgwv.jpg" alt="03"></p>
<p class="text-center">『步骤』</p>

<blockquote>
<ol>
<li>面条煮熟捞出，凉水冲淋后沥干水分，加少量橄榄油拌匀备用.</li>
<li>苦菊撕小段、黄瓜切丝、番茄切丁.</li>
<li>将配菜加入面条中，根据口味添加调味料，拌匀，装盘，撒黑芝麻提香.</li>
</ol>
</blockquote>
<p><img src="////ww4.sinaimg.cn/mw690/910ff108gw1f5cxxq51ttj21jk1jkwmz.jpg" alt="04"></p>
<p class="text-center">いただきます</p>

<p><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5cxxitxtpj21jk1jkk5j.jpg" alt="05"></p>
<blockquote>
<p>曾经有一份精致的早餐放在我面前, 而我选择了珍惜.</p>
</blockquote>
<p>感谢原创作者: <a href="//weibo.com/manoir">@北苑墨崽</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[今天的早餐——吐司披萨]]></title>
      <url>http://blog.1stg.me/2016/06/29/breakfast-june-29-2016-Toast-Pizza/</url>
      <content type="html"><![CDATA[<blockquote>
<p>如果一定问我有一个爱做点心甜品的媳妇儿是一种什么样的体验,<br>  我会回答那是满满的幸福的味道.</p>
</blockquote>
<p>今天的早餐是面包片做成的自制吐司披萨!</p>
<a id="more"></a>
<p><img src="//ww3.sinaimg.cn/mw690/910ff108gw1f5bshaacpej21jk1jk12n.jpg" alt="01"><br><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5bshcq9kkj21jk1jk7d4.jpg" alt="02"><br><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5bshc0vhpj21jk1jkwpa.jpg" alt="03"><br><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5bsheb37kj21jk1jkdph.jpg" alt="04"><br><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5bshez02ej21jk1jk7d4.jpg" alt="05"><br><img src="//ww2.sinaimg.cn/mw690/910ff108gw1f5bshfxunkj21jk1jk13j.jpg" alt="06"></p>
<p>点击可查看更多近期饮食皂片: <a href="//mp.weixin.qq.com/s?__biz=MzA5Nzk2MjUyMQ==&amp;mid=2651748061&amp;idx=1&amp;sn=03ab69c88dbeebd0e1efb5c4606159dd">人皆苦炎热，我爱夏日长</a></p>
<blockquote>
<p>曾经有一份精致的早餐放在我面前, 而我选择了珍惜.</p>
</blockquote>
<p>感谢原创作者: <a href="//weibo.com/manoir">@北苑墨崽</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开始翻译 React Redux Starter Kit]]></title>
      <url>http://blog.1stg.me/2016/06/29/start-translating-React-Redux-Starter-Kit/</url>
      <content type="html"><![CDATA[<h2 id="react-redux-starter-kit-简要介绍"><a href="#react-redux-starter-kit-简要介绍" class="headerlink" title="react-redux-starter-kit 简要介绍"></a>react-redux-starter-kit 简要介绍</h2><p><a href="https://github.com/davezuko/react-redux-starter-kit" target="_blank" rel="external">react-redux-starter-kit</a> 项目主要提供了一种 React-Redux 技术栈整合包, 免除使用者为项目构建、单元测试、热重载等整合服务重复工作.</p>
<p>翻译项目: <a href="https://github.com/JounQin/react-redux-starter-kit-cn" target="_blank" rel="external">react-redux-starter-kit-cn</a></p>
<a id="more"></a>
<p>欢迎其他有兴趣的同学一起参与, 帮助不熟悉的英语的同仁更好地使用 React-Redux 技术栈, 期待你的支持.</p>
<p>我个人也将使用整个启动包/脚手架开始搭建一个个人主页, 预计发布在 <a href="http://1stg.me" target="_blank" rel="external">1stg</a>.</p>
<h2 id="主要技术"><a href="#主要技术" class="headerlink" title="主要技术"></a>主要技术</h2><ul>
<li><a href="https://github.com/facebook/react" target="_blank" rel="external">react</a></li>
<li><a href="https://github.com/rackt/redux" target="_blank" rel="external">redux</a></li>
<li><a href="https://github.com/rackt/react-router" target="_blank" rel="external">react-router</a></li>
<li><a href="https://github.com/rackt/react-router-redux" target="_blank" rel="external">react-router-redux</a></li>
<li><a href="https://github.com/webpack/webpack" target="_blank" rel="external">webpack</a></li>
<li><a href="https://github.com/babel/babel" target="_blank" rel="external">babel</a></li>
<li><a href="https://github.com/koajs/koa" target="_blank" rel="external">koa</a></li>
<li><a href="https://github.com/karma-runner/karma" target="_blank" rel="external">karma</a></li>
<li><a href="http://eslint.org" target="_blank" rel="external">eslint</a></li>
</ul>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构:"></a>目录结构:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── bin                      # 构建/启动脚本</div><div class="line">├── blueprints               # redux-cli 蓝图文件</div><div class="line">├── build                    # 所有构建相关的配置</div><div class="line">│   └── webpack              # 指定环境下的 webpack 配置</div><div class="line">├── config                   # 项目配置设置</div><div class="line">├── server                   # Koa 应用 (使用 webpack 中间件)</div><div class="line">│   └── main.js              # 服务端应用入口</div><div class="line">├── src                      # 应用源码</div><div class="line">│   ├── main.js              # 应用初始化和渲染</div><div class="line">│   ├── components           # 可复用的视图组件</div><div class="line">│   ├── containers           # 可复用的容器组件</div><div class="line">│   ├── layouts              # 决定主要页面结构的组件</div><div class="line">│   ├── static               # 静态资源 (未在源码中任何地方引入)</div><div class="line">│   ├── styles               # 应用通用性样式 (通用设置)</div><div class="line">│   ├── store                # Redux 指定的分片</div><div class="line">│   │   ├── createStore.js   # 创建并启用 redux store</div><div class="line">│   │   └── reducers.js      # Reducer 声明和注入</div><div class="line">│   └── routes               # 主路由定义和异步分割点</div><div class="line">│       ├── index.js         # 使用 store 启动主应用程序路由</div><div class="line">│       ├── Root.js          # 为上下文组件 providers 包装组件</div><div class="line">│       └── Home             # 分形路由</div><div class="line">│           ├── index.js     # 路由定义和异步分割点</div><div class="line">│           ├── assets       # 渲染组件需要的资源</div><div class="line">│           ├── components   # React 视图组件</div><div class="line">│           ├── container    # 将组件与 actions 和 store 连接起来</div><div class="line">│           ├── modules      # reducers/actions/常量等的集合</div><div class="line">│           └── routes **    # 分形子路由 (** 可选)</div><div class="line">└── tests                    # 单元测试</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用 Hexo 搭建免费博客遇到的几个坑]]></title>
      <url>http://blog.1stg.me/2016/06/28/some-problems-while-starting-with-hexo/</url>
      <content type="html"><![CDATA[<p>今天开始尝试使用 Hexo 替代 Jekyll 搭建 GitHub Pages 免费博客, 期间由于一些惯性思维或技术细节不熟悉的原因折腾了很久才成功完整地发布博客工程, 下面记录一下具体遇到的问题和解决过程。</p>
<a id="more"></a>
<h2 id="项目结构的变化"><a href="#项目结构的变化" class="headerlink" title="项目结构的变化"></a>项目结构的变化</h2><p>由于 Jekyll 中最终发布的博客内容文件也处于博客源码项目, 第一次搭建博客时运行 <code>hexo deploy</code> 成功后实际上只是把 <em>product</em> 目录发布到 <em>GitHub Pages</em> <a href="https://JounQin.github.io" target="_blank" rel="external">个人主页工程</a>, 也就是说 Hexo 的源码和最终的博客内容是分开的. 其实是因为 Jekyll 得到 GitHub 的官方支持而已, 当然 Hexo 配置好后搭建博客也相当方便.</p>
<h2 id="项目发布配置"><a href="#项目发布配置" class="headerlink" title="项目发布配置"></a>项目发布配置</h2><ol>
<li>Hexo 发布到 GitHub 只需要调整 <em>_config.yml</em> 文件中的 <em>deploy</em> 部分内容, 但是需要注意的是, <em>git</em> 配置对应的路径必须是 ssh 格式的, 而不是 <em>https</em>, 否则 <code>hexo deploy</code> 是无法发布成功的.</li>
<li>为了实现提交博客源码自动发布代码到 <em>GitHub Pages</em> 工程, 可以选择使用 <a href="https://travis-ci.org/" target="_blank" rel="external">travis-ci</a> (参考 <a href="http://w3cboy.com/post/2016/03/travisci-hexo-deploy/" target="_blank" rel="external">使用 travis-ci 自动部署 hexo 博客</a>), 运行 <code>travis encrypt-file ~/.ssh/id_rsa --add</code> 自动添加密钥信息时 <code>~/.ssh/id_rsa</code> 会被写成 <code>~\/.ssh/id_rsa</code>, 这会导致 <em>travis-ci</em> 运行失败.</li>
<li>由于变更了 <em>id_rsa.enc</em> 文件的位置, 因此对应地 <em>.travis.yml</em> 文件中也要调整.</li>
</ol>
]]></content>
    </entry>
    
  
  
</search>
